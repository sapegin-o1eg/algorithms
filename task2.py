"""
Для понимания происходящего необходимо знать таблицы истинности логических операций. Вот они:
И         0011
          0101
          0001


ИЛИ       0011
          0101
          0111

Искл. ИЛИ 0011
          0101
          0110

НЕ        01
          10

Затем необходимо применить побайтно соответствующую операцию к двоичному
представлению чисел 5:0b = 0000 0101 и 6:0b = 0000 0110
"""

a = 5
b = 6

# далее И:
# 0000 0101
#          = 0000 0100 => 4
# 0000 0110
res = a & b
print(f"{a} И {b} = {res}")

# далее ИЛИ:
# 0000 0101
#           = 0000 0111 => 7
# 0000 0110
res = a | b
print(f"{a} ИЛИ {b} = {res}")

# далее ИСКЛЮЧАЮЩЕЕ ИЛИ:
# 0000 0101
#           = 0000 0011 => 3
# 0000 0110
res = a ^ b
print(f"{a} ИСКЛЮЧАЮЩЕЕ ИЛИ {b} = {res}")

# далее НЕ 5 и НЕ 6, все биты инвертируются.
# Результат связан с особенностями представления отрицательных чисел, результат будет такой ~x = (-x-1)
# Бит, указывающий на то, что это положительное или отрицательноее число также инвертируется, поэтому знак меняется.
res = ~ a
print(f"ОТРИЦАНИЕ {a} = {res}")

res = ~ b
print(f"ОТРИЦАНИЕ {b} = {res}")

# далее сдвиг на 2 бита вправо 0000 0101 -> 0000 0001 => 1
res = a >> 2
print(f"Сдвиг вправо на 2 бита над числом {a} = {res}")

# далее сдвиг на 2 бита влево 0000 0101 -> 0001 0100 => 20
res = a << 2
print(f"Сдвиг влево на 2 бита над числом {a} = {res}")